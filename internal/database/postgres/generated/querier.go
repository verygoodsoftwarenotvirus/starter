// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package generated

import (
	"context"
	"database/sql"
)

type Querier interface {
	AcceptPrivacyPolicyForUser(ctx context.Context, db DBTX, id string) error
	AcceptTermsOfServiceForUser(ctx context.Context, db DBTX, id string) error
	AddToAccountDuringCreation(ctx context.Context, db DBTX, arg *AddToAccountDuringCreationParams) error
	AddUserToAccount(ctx context.Context, db DBTX, arg *AddUserToAccountParams) error
	ArchiveAccount(ctx context.Context, db DBTX, arg *ArchiveAccountParams) (int64, error)
	ArchiveOAuth2Client(ctx context.Context, db DBTX, id string) (int64, error)
	ArchiveOAuth2ClientTokenByAccess(ctx context.Context, db DBTX, access string) (int64, error)
	ArchiveOAuth2ClientTokenByCode(ctx context.Context, db DBTX, code string) (int64, error)
	ArchiveOAuth2ClientTokenByRefresh(ctx context.Context, db DBTX, refresh string) (int64, error)
	ArchiveServiceSetting(ctx context.Context, db DBTX, id string) (int64, error)
	ArchiveServiceSettingConfiguration(ctx context.Context, db DBTX, id string) (int64, error)
	ArchiveUser(ctx context.Context, db DBTX, id string) (int64, error)
	ArchiveUserMemberships(ctx context.Context, db DBTX, id string) (int64, error)
	ArchiveWebhook(ctx context.Context, db DBTX, arg *ArchiveWebhookParams) (int64, error)
	ArchiveWebhookTriggerEvent(ctx context.Context, db DBTX, arg *ArchiveWebhookTriggerEventParams) (int64, error)
	AttachAccountInvitationsToUserID(ctx context.Context, db DBTX, arg *AttachAccountInvitationsToUserIDParams) error
	CheckAccountInvitationExistence(ctx context.Context, db DBTX, id string) (bool, error)
	CheckOAuth2ClientTokenExistence(ctx context.Context, db DBTX, id string) (bool, error)
	CheckServiceSettingConfigurationExistence(ctx context.Context, db DBTX, id string) (bool, error)
	CheckServiceSettingExistence(ctx context.Context, db DBTX, id string) (bool, error)
	CheckUserNotificationExistence(ctx context.Context, db DBTX, arg *CheckUserNotificationExistenceParams) (bool, error)
	CheckWebhookExistence(ctx context.Context, db DBTX, arg *CheckWebhookExistenceParams) (bool, error)
	CreateAccount(ctx context.Context, db DBTX, arg *CreateAccountParams) error
	CreateAccountInvitation(ctx context.Context, db DBTX, arg *CreateAccountInvitationParams) error
	CreateAccountUserMembershipForNewUser(ctx context.Context, db DBTX, arg *CreateAccountUserMembershipForNewUserParams) error
	CreateAuditLogEntry(ctx context.Context, db DBTX, arg *CreateAuditLogEntryParams) error
	CreateOAuth2Client(ctx context.Context, db DBTX, arg *CreateOAuth2ClientParams) error
	CreateOAuth2ClientToken(ctx context.Context, db DBTX, arg *CreateOAuth2ClientTokenParams) error
	CreatePasswordResetToken(ctx context.Context, db DBTX, arg *CreatePasswordResetTokenParams) error
	CreateServiceSetting(ctx context.Context, db DBTX, arg *CreateServiceSettingParams) error
	CreateServiceSettingConfiguration(ctx context.Context, db DBTX, arg *CreateServiceSettingConfigurationParams) error
	CreateUser(ctx context.Context, db DBTX, arg *CreateUserParams) error
	CreateUserNotification(ctx context.Context, db DBTX, arg *CreateUserNotificationParams) error
	CreateWebhook(ctx context.Context, db DBTX, arg *CreateWebhookParams) error
	CreateWebhookTriggerEvent(ctx context.Context, db DBTX, arg *CreateWebhookTriggerEventParams) error
	GetAccountByIDWithMemberships(ctx context.Context, db DBTX, id string) ([]*GetAccountByIDWithMembershipsRow, error)
	GetAccountInvitationByAccountAndID(ctx context.Context, db DBTX, arg *GetAccountInvitationByAccountAndIDParams) (*GetAccountInvitationByAccountAndIDRow, error)
	GetAccountInvitationByEmailAndToken(ctx context.Context, db DBTX, arg *GetAccountInvitationByEmailAndTokenParams) (*GetAccountInvitationByEmailAndTokenRow, error)
	GetAccountInvitationByTokenAndID(ctx context.Context, db DBTX, arg *GetAccountInvitationByTokenAndIDParams) (*GetAccountInvitationByTokenAndIDRow, error)
	GetAccountUserMembershipsForUser(ctx context.Context, db DBTX, belongsToUser string) ([]*AccountUserMemberships, error)
	GetAccountsForUser(ctx context.Context, db DBTX, arg *GetAccountsForUserParams) ([]*GetAccountsForUserRow, error)
	GetAdminUserByUsername(ctx context.Context, db DBTX, username string) (*GetAdminUserByUsernameRow, error)
	GetAuditLogEntriesForAccount(ctx context.Context, db DBTX, arg *GetAuditLogEntriesForAccountParams) ([]*GetAuditLogEntriesForAccountRow, error)
	GetAuditLogEntriesForAccountAndResourceType(ctx context.Context, db DBTX, arg *GetAuditLogEntriesForAccountAndResourceTypeParams) ([]*GetAuditLogEntriesForAccountAndResourceTypeRow, error)
	GetAuditLogEntriesForUser(ctx context.Context, db DBTX, arg *GetAuditLogEntriesForUserParams) ([]*GetAuditLogEntriesForUserRow, error)
	GetAuditLogEntriesForUserAndResourceType(ctx context.Context, db DBTX, arg *GetAuditLogEntriesForUserAndResourceTypeParams) ([]*GetAuditLogEntriesForUserAndResourceTypeRow, error)
	GetAuditLogEntry(ctx context.Context, db DBTX, id string) (*GetAuditLogEntryRow, error)
	GetDefaultAccountIDForUser(ctx context.Context, db DBTX, belongsToUser string) (string, error)
	GetEmailVerificationTokenByUserID(ctx context.Context, db DBTX, id string) (sql.NullString, error)
	GetOAuth2ClientByClientID(ctx context.Context, db DBTX, clientID string) (*Oauth2Clients, error)
	GetOAuth2ClientByDatabaseID(ctx context.Context, db DBTX, id string) (*Oauth2Clients, error)
	GetOAuth2ClientTokenByAccess(ctx context.Context, db DBTX, access string) (*Oauth2ClientTokens, error)
	GetOAuth2ClientTokenByCode(ctx context.Context, db DBTX, code string) (*Oauth2ClientTokens, error)
	GetOAuth2ClientTokenByRefresh(ctx context.Context, db DBTX, refresh string) (*Oauth2ClientTokens, error)
	GetOAuth2Clients(ctx context.Context, db DBTX, arg *GetOAuth2ClientsParams) ([]*GetOAuth2ClientsRow, error)
	GetPasswordResetToken(ctx context.Context, db DBTX, token string) (*GetPasswordResetTokenRow, error)
	GetPendingInvitesForUser(ctx context.Context, db DBTX, arg *GetPendingInvitesForUserParams) ([]*GetPendingInvitesForUserRow, error)
	GetPendingInvitesFromUser(ctx context.Context, db DBTX, arg *GetPendingInvitesFromUserParams) ([]*GetPendingInvitesFromUserRow, error)
	GetServiceSetting(ctx context.Context, db DBTX, id string) (*ServiceSettings, error)
	GetServiceSettingConfigurationByID(ctx context.Context, db DBTX, id string) (*GetServiceSettingConfigurationByIDRow, error)
	GetServiceSettingConfigurationForAccountBySettingName(ctx context.Context, db DBTX, arg *GetServiceSettingConfigurationForAccountBySettingNameParams) (*GetServiceSettingConfigurationForAccountBySettingNameRow, error)
	GetServiceSettingConfigurationForUserBySettingName(ctx context.Context, db DBTX, arg *GetServiceSettingConfigurationForUserBySettingNameParams) (*GetServiceSettingConfigurationForUserBySettingNameRow, error)
	GetServiceSettingConfigurationsForAccount(ctx context.Context, db DBTX, belongsToAccount string) ([]*GetServiceSettingConfigurationsForAccountRow, error)
	GetServiceSettingConfigurationsForUser(ctx context.Context, db DBTX, belongsToUser string) ([]*GetServiceSettingConfigurationsForUserRow, error)
	GetServiceSettings(ctx context.Context, db DBTX, arg *GetServiceSettingsParams) ([]*GetServiceSettingsRow, error)
	GetUserByEmail(ctx context.Context, db DBTX, emailAddress string) (*GetUserByEmailRow, error)
	GetUserByEmailAddressVerificationToken(ctx context.Context, db DBTX, emailAddressVerificationToken sql.NullString) (*GetUserByEmailAddressVerificationTokenRow, error)
	GetUserByID(ctx context.Context, db DBTX, id string) (*GetUserByIDRow, error)
	GetUserByUsername(ctx context.Context, db DBTX, username string) (*GetUserByUsernameRow, error)
	GetUserIDsNeedingIndexing(ctx context.Context, db DBTX) ([]string, error)
	GetUserNotification(ctx context.Context, db DBTX, arg *GetUserNotificationParams) (*UserNotifications, error)
	GetUserNotificationsForUser(ctx context.Context, db DBTX, arg *GetUserNotificationsForUserParams) ([]*GetUserNotificationsForUserRow, error)
	GetUserWithUnverifiedTwoFactor(ctx context.Context, db DBTX, id string) (*GetUserWithUnverifiedTwoFactorRow, error)
	GetUserWithVerifiedTwoFactor(ctx context.Context, db DBTX, id string) (*GetUserWithVerifiedTwoFactorRow, error)
	GetUsers(ctx context.Context, db DBTX, arg *GetUsersParams) ([]*GetUsersRow, error)
	GetWebhook(ctx context.Context, db DBTX, arg *GetWebhookParams) ([]*GetWebhookRow, error)
	GetWebhooksForAccount(ctx context.Context, db DBTX, arg *GetWebhooksForAccountParams) ([]*GetWebhooksForAccountRow, error)
	GetWebhooksForAccountAndEvent(ctx context.Context, db DBTX, arg *GetWebhooksForAccountAndEventParams) ([]*Webhooks, error)
	MarkAccountUserMembershipAsUserDefault(ctx context.Context, db DBTX, arg *MarkAccountUserMembershipAsUserDefaultParams) error
	MarkEmailAddressAsUnverified(ctx context.Context, db DBTX, id string) error
	MarkEmailAddressAsVerified(ctx context.Context, db DBTX, arg *MarkEmailAddressAsVerifiedParams) error
	MarkTwoFactorSecretAsUnverified(ctx context.Context, db DBTX, arg *MarkTwoFactorSecretAsUnverifiedParams) error
	MarkTwoFactorSecretAsVerified(ctx context.Context, db DBTX, id string) error
	ModifyAccountUserPermissions(ctx context.Context, db DBTX, arg *ModifyAccountUserPermissionsParams) error
	RedeemPasswordResetToken(ctx context.Context, db DBTX, id string) error
	RemoveUserFromAccount(ctx context.Context, db DBTX, arg *RemoveUserFromAccountParams) error
	SearchForServiceSettings(ctx context.Context, db DBTX, nameQuery string) ([]*ServiceSettings, error)
	SearchUsersByUsername(ctx context.Context, db DBTX, username string) ([]*SearchUsersByUsernameRow, error)
	SetAccountInvitationStatus(ctx context.Context, db DBTX, arg *SetAccountInvitationStatusParams) error
	SetUserAccountStatus(ctx context.Context, db DBTX, arg *SetUserAccountStatusParams) (int64, error)
	TransferAccountMembership(ctx context.Context, db DBTX, arg *TransferAccountMembershipParams) error
	TransferAccountOwnership(ctx context.Context, db DBTX, arg *TransferAccountOwnershipParams) error
	UpdateAccount(ctx context.Context, db DBTX, arg *UpdateAccountParams) (int64, error)
	UpdateAccountWebhookEncryptionKey(ctx context.Context, db DBTX, arg *UpdateAccountWebhookEncryptionKeyParams) (int64, error)
	UpdateServiceSettingConfiguration(ctx context.Context, db DBTX, arg *UpdateServiceSettingConfigurationParams) (int64, error)
	UpdateUserAvatarSrc(ctx context.Context, db DBTX, arg *UpdateUserAvatarSrcParams) (int64, error)
	UpdateUserDetails(ctx context.Context, db DBTX, arg *UpdateUserDetailsParams) (int64, error)
	UpdateUserEmailAddress(ctx context.Context, db DBTX, arg *UpdateUserEmailAddressParams) (int64, error)
	UpdateUserLastIndexedAt(ctx context.Context, db DBTX, id string) (int64, error)
	UpdateUserNotification(ctx context.Context, db DBTX, arg *UpdateUserNotificationParams) (int64, error)
	UpdateUserPassword(ctx context.Context, db DBTX, arg *UpdateUserPasswordParams) (int64, error)
	UpdateUserTwoFactorSecret(ctx context.Context, db DBTX, arg *UpdateUserTwoFactorSecretParams) (int64, error)
	UpdateUserUsername(ctx context.Context, db DBTX, arg *UpdateUserUsernameParams) (int64, error)
	UserIsAccountMember(ctx context.Context, db DBTX, arg *UserIsAccountMemberParams) (bool, error)
}

var _ Querier = (*Queries)(nil)
